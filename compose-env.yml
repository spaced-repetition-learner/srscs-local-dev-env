version: '3.9'

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_net

  kafka:
    container_name: kafkabroker
    image: confluentinc/cp-kafka:5.2.5
    depends_on:
      - zookeeper
    restart: on-failure
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_net

  mysql:
    container_name: mysql
    image: mysql
    platform: linux/x86_64
    restart: on-failure
    environment:
      MYSQL_DATABASE: user_service
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '3306:3306'
    networks:
      - mariadb_net

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin
    restart: on-failure
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - '8100:80'
    networks:
      - mariadb_net

  mongodb:
    container_name: mongo
    image: mongo
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'root'
    ports:
      - '27017:27017'
    networks:
      - mongo_net

  mongoexpress:
    container_name: mongoexpress
    image: mongo-express
    restart: on-failure
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: 'root'
      ME_CONFIG_MONGODB_ADMINPASSWORD: 'root'
      ME_CONFIG_MONGODB_SERVER: 'mongo'
      ME_CONFIG_MONGODB_PORT: '27017'
    ports:
      - '8081:8081'
    networks:
      - mongo_net

  cassandra:
    container_name: cassandra
    image: cassandra
    restart: on-failure
    ports:
      - '9042:9042'
    networks:
      - cassandra_net

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    restart: on-failure
    ports:
      - '9411:9411'
    networks:
      - tracing_net

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.1.3
    environment:
      LICENSE: basic
      cluster.name: docker-cluster
      discovery.type: single-node                                                 # Otherwise, Port 9200 will not be accessible
      ES_JAVA_OPTS: "-Xms256m -Xmx256m"                                           # 2GB is default and may cause crashes
      ELASTIC_PASSWORD: root
      xpack.security.enabled: 'false'
    ports:
      - '9200:9200'
      - '9300:9300'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - log_net

  kibana:
    container_name: kibana
    image: kibana:8.1.3
    depends_on:
      - elasticsearch
    environment:
      KIBANA_SYSTEM_PASSWORD: root
    ports:
      - '5601:5601'
    networks:
      - log_net

  logstash:
    container_name: logstash
    image: logstash:8.1.3
    restart: on-failure
    depends_on:
      - elasticsearch
      - kibana
    ports:
      - '25826:25826'
      - '5044:5044'
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro                                 # Configuration File
      - ./logs/prod:/usr/share/logstash/logs/prod:ro
      - ../srscs-prod-test-service/logs:/usr/share/logstash/logs/dev/prod_test_service:ro
      - ../srscs-user-service/logs:/usr/share/logstash/logs/dev/user_service:ro
      - ../srscs-deck-service/logs:/usr/share/logstash/logs/dev/deck_service:ro
      - ../srscs-collab-service/logs:/usr/share/logstash/logs/dev/collab_service:ro

    environment:
      ELASTIC_HOST: elasticsearch:9200
    networks:
      - log_net

networks:
  kafka_net:
    external: false
    name: kafka_net
  mongo_net:
    external: false
    name: mongo_net
  mariadb_net:
    external: false
    name: mariadb_net
  cassandra_net:
    external: false
    name: cassandra_net
  tracing_net:
    external: false
    name: tracing_net
  log_net:
    external: false
    name: log_net